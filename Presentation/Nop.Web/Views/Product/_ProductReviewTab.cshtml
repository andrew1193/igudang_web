@model ProductReviewsModel
@using Nop.Web.Models.Catalog;


@*<div class="product-review-list">
        <div class="title">
            <strong>@T("Reviews.ExistingReviews")</strong>
        </div>
        @if (Model.Items.Count > 0)
        {
            foreach (var review in Model.Items)
            {
                int ratingPercent = review.Rating * 20;
                <div class="product-review-item">
                    <div class="review-item-head">
                        <div class="product-review-box">
                            <div class="rating">
                                <div style="width: @(ratingPercent)%">
                                </div>
                            </div>
                        </div>
                        <div class="review-title">
                            <strong>@review.Title</strong>
                        </div>
                    </div>
                    <div class="review-content">
                        <div class="review-text">
                            @Html.Raw(Nop.Core.Html.HtmlHelper.FormatText(review.ReviewText, false, true, false, false, false, false))
                        </div>
                        <div class="review-info">
                            <span class="user">
                                <label>@T("Reviews.From"):</label>
                                @if (review.AllowViewingProfiles)
                                {
                                    <a href="@Url.RouteUrl("CustomerProfile", new { id = review.CustomerId })">@(review.CustomerName)</a>
                                }
                                else
                                {
                                    @review.CustomerName
                                }
                            </span>
                            <span class="separator">|</span>
                            <span class="date">
                                <label>@T("Reviews.Date"):</label>
                                <span>@review.WrittenOnStr</span>
                            </span>
                        </div>
                        @Html.Partial("_ProductReviewHelpfulness", review.Helpfulness, new ViewDataDictionary())
                        @Html.Widget("productreviews_page_inside_review", review.Id)
                        @if (!String.IsNullOrEmpty(review.ReplyText))
                        {
                            <div class="reply">
                                <div class="reply-header">
                                    @T("Reviews.Reply")
                                </div>
                                <div class="reply-text">
                                    @Html.Raw(Nop.Core.Html.HtmlHelper.FormatText(review.ReplyText, false, true, false, false, false, false))
                                </div>
                            </div>
                        }
                    </div>
                </div>
            }
        }
    </div>*@





<ol class="commentlist clearfix">
    @if (Model.Items.Count > 0)
    {
        foreach (var review in Model.Items)
        {
            int ratingPercent = review.Rating * 20;
            <li class="comment even thread-even depth-1" id="li-comment-1">
                <div id="comment-1" class="comment-wrap clearfix">
                    <div class="comment-meta">
                        <div class="comment-author vcard">
                            <span class="comment-avatar clearfix">
                                <img alt='' src='http://0.gravatar.com/avatar/ad516503a11cd5ca435acc9bb6523536?s=60' height='60' width='60' />
                            </span>
                        </div>
                    </div>
                    <div class="comment-content clearfix">
                        <div class="comment-author">
                            @if (review.AllowViewingProfiles)
                            {
                                <a href="@Url.RouteUrl("CustomerProfile", new { id = review.CustomerId })">@(review.CustomerName)</a>
                            }
                            else
                            {
                                @review.CustomerName
                            }
                            <span><a href="#" title="Permalink to this comment">@review.WrittenOnStr</a></span>
                        </div>
                        <p>@Html.Raw(Nop.Core.Html.HtmlHelper.FormatText(review.ReviewText, false, true, false, false, false, false))</p>
                        <div class="review-comment-ratings">
                            <div class="review-item-head">
                                <div class="product-review-box">
                                    <div class="rating">
                                        <div style="width: @(ratingPercent)%">
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                    <div class="clear"></div>
                </div>
            </li>
        }
    }
</ol>