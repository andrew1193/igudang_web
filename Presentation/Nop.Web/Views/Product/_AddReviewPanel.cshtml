@model ProductReviewsModel
@using Nop.Web.Models.Catalog;



<div class="write-review" id="review-form">
    <div class="title">
        <strong>@T("Reviews.Write")</strong>
    </div>
    @using (Html.BeginForm("AddReviewFromPanel", "Product", FormMethod.Post, Model))
    {
        @Html.AntiForgeryToken()
        var validationSummary = Html.ValidationSummary(true);
        if (!MvcHtmlString.IsNullOrEmpty(validationSummary))
        {
            <div class="message-error">@validationSummary</div>
        }
        <div class="fieldset">
            <div class="form-fields">
                <div class="inputs">
                    @Html.LabelFor(model => model.AddProductReview.Title, new { }, "*:")
                    @*@Html.RequiredHint()*@
                    @Html.TextBoxFor(model => model.AddProductReview.Title, Model.AddProductReview.CanCurrentCustomerLeaveReview ? (object)(new { @class = "review-title" }) : (object)(new { @class = "review-title", disabled = "disabled" }))
                    
                    @Html.ValidationMessageFor(model => model.AddProductReview.Title)
                </div>
                <div class="inputs">
                    @Html.LabelFor(model => model.AddProductReview.ReviewText, new { }, "*:")
                    @Html.TextAreaFor(model => model.AddProductReview.ReviewText, Model.AddProductReview.CanCurrentCustomerLeaveReview ? (object)(new { @class = "review-text" }) : (object)(new { @class = "review-text", disabled = "disabled" }))
                    @*@Html.RequiredHint()*@
                    @Html.ValidationMessageFor(model => model.AddProductReview.ReviewText)
                </div>
                <div class="review-rating">
                    @Html.LabelFor(model => model.AddProductReview.Rating, new { }, ":")
                    <ul>
                        <li class="label first">@T("Reviews.Fields.Rating.Bad")</li>
                        <li class="rating-options">
                            @Html.RadioButtonFor(model => model.AddProductReview.Rating, "1", new { id = "addproductrating_1" })
                            @Html.RadioButtonFor(model => model.AddProductReview.Rating, "2", new { id = "addproductrating_2" })
                            @Html.RadioButtonFor(model => model.AddProductReview.Rating, "3", new { id = "addproductrating_3" })
                            @Html.RadioButtonFor(model => model.AddProductReview.Rating, "4", new { id = "addproductrating_4" })
                            @Html.RadioButtonFor(model => model.AddProductReview.Rating, "5", new { id = "addproductrating_5" })
                        </li>
                        <li class="label last">@T("Reviews.Fields.Rating.Excellent")</li>
                    </ul>
                </div>
                @if (Model.AddProductReview.DisplayCaptcha)
                {
                    <div class="captcha-box">
                        @Html.Raw(Html.GenerateCaptcha())
                    </div>
                }
            </div>
        </div>
        <div class="col_full nobottommargin">
            <input type="hidden" name="currentUrl" value="@Request.Url" />
            <input type="hidden" name="productId" value="@Model.ProductId" />
            <input type="submit" name="add-review" class="button button-3d nomargin" value="@T("Reviews.SubmitButton")" />
        </div>
    }
</div>