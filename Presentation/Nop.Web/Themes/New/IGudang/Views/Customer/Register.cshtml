@model RegisterModel
@using Nop.Web.Models.Customer;
@{
    Layout = "~/Views/Shared/_ColumnsOne.cshtml";

    //title
    Html.AddTitleParts(T("PageTitle.Register").Text);
    //page class
    Html.AppendPageCssClassParts("html-registration-page");
}


<div class="content-wrap pt-2">

    <div class="container clearfix">
        <div class="accordion accordion-lg divcenter nobottommargin clearfix" style="max-width: 550px;">
          
            <div class="acctitle"><i class="acc-closed icon-user4"></i><i class="acc-open icon-ok-sign"></i>New Signup? Register for an Account</div>
            <div class="acc_content clearfix">
               @using (Html.BeginForm())
               {
                @Html.AntiForgeryToken()
                <div class="page registration-page">
                 
                    <div class="page-body">
                        @{
                            var validationSummary = Html.ValidationSummary(true);
                        }
                        @if (!MvcHtmlString.IsNullOrEmpty(validationSummary))
                        {
                            <div class="message-error">@validationSummary</div>
                        }
                        @Html.Partial("_ExternalAuthentication.AssociateMessage")
                       

                            <div class="col_full">
                                @if (Model.GenderEnabled)
                                {
                                    <div class="col_full">
                                        <label>@T("Account.Fields.Gender"):</label>
                                        <div class="gender">
                                            <span class="male">
                                                @Html.RadioButton("Gender", "M", (Model.Gender == "M"), new { id = "gender-male" })
                                                <label class="forcheckbox" for="gender-male">@T("Account.Fields.Gender.Male")</label>
                                            </span>
                                            <span class="female">
                                                @Html.RadioButton("Gender", "F", (Model.Gender == "F"), new { id = "gender-female" })
                                                <label class="forcheckbox" for="gender-female">@T("Account.Fields.Gender.Female")</label>
                                            </span>
                                        </div>
                                    </div>
                                }
                                <div class="col_full">


                                    @Html.LabelFor(model => model.FirstName, new { }, ":")@Html.RequiredHint()
                               
                                    <input type="text" id="register-form-name" asp-for="FirstName" name="register-form-name" value="" class="form-control" />
                                

                                  
                                    @Html.ValidationMessageFor(model => model.FirstName)
                                </div>
                                <div class="col_full">

                                    @Html.LabelFor(model => model.LastName, new { }, ":")@Html.RequiredHint()
                               
                                    <input type="text" id="register-form-name" asp-for="LastName" name="register-form-name" value="" class="form-control" />





                                 
                                    @Html.ValidationMessageFor(model => model.LastName)
                                </div>
                                @if (Model.DateOfBirthEnabled)
                                {
                                    <div class="col_full">
                                        <label>@T("Account.Fields.DateOfBirth"):</label>
                                        @Html.DatePickerDropDowns(Html.FieldNameFor(x => x.DateOfBirthDay),
                                Html.FieldNameFor(x => x.DateOfBirthMonth),
                                Html.FieldNameFor(x => x.DateOfBirthYear),
                                DateTime.Now.Year - 110,
                                DateTime.Now.Year,
                                Model.DateOfBirthDay,
                                Model.DateOfBirthMonth,
                                Model.DateOfBirthYear)
                                        @if (Model.DateOfBirthRequired)
                                        {
                                            @Html.RequiredHint()
                                        }
                                        @Html.ValidationMessageFor(model => model.DateOfBirthDay)
                                        @Html.ValidationMessageFor(model => model.DateOfBirthMonth)
                                        @Html.ValidationMessageFor(model => model.DateOfBirthYear)
                                    </div>
                                }
                                <div class="col_full">
                                    @Html.LabelFor(model => model.Email, new { }, ":")@Html.RequiredHint()
                              
                                    <input type="text" id="register-form-name" asp-for="Email" name="register-form-name" value="" class="form-control" />



                                   
                                    
                                    @Html.ValidationMessageFor(model => model.Email)
                                </div>
                                @if (Model.EnteringEmailTwice)
                                {
                                    <div class="col_full">

                                        @Html.LabelFor(model => model.ConfirmEmail, new { }, ":")@Html.RequiredHint()

                                       
                                        <input type="text" id="register-form-name" asp-for="ConfirmEmail" name="register-form-name" value="" class="form-control" />



                                     
                                     
                                        @Html.ValidationMessageFor(model => model.ConfirmEmail)
                                    </div>
                                }
                                @if (Model.UsernamesEnabled)
                                {
                                    <div class="col_full">

                                        @Html.LabelFor(model => model.Username, new { }, ":")@Html.RequiredHint()


                            
                                        <input type="text" id="register-form-name" asp-for="Username" name="register-form-name" value="" class="form-control" />




                                   
                                        @Html.ValidationMessageFor(model => model.Username)
                                        @if (Model.CheckUsernameAvailabilityEnabled)
                                        {
                                            @Html.Partial("_CheckUsernameAvailability")
                                        }
                                    </div>

                                }

                                @if (Model.CompanyEnabled)
                                {
                                    <div class="col_full">
                                        @Html.LabelFor(model => model.Company, new { }, ":")@if (Model.CompanyRequired)
                                        {
                                            @Html.RequiredHint()
                                        }
                                       
                                   
                                        <input type="text" id="register-form-name" asp-for="Company" name="register-form-name" value="" class="form-control" />





                                        @Html.ValidationMessageFor(model => model.Company)
                                    </div>
                                }
                                @if (Model.DisplayVatNumber)
                                {
                                    <div class="col_full">
                                        @Html.LabelFor(model => model.VatNumber, new { }, ":")

                                        <input type="text" id="register-form-name" asp-for="VatNumber" name="register-form-name" value="" class="form-control" />


                                       
                                        <span class="vat-note"><em>@T("Account.Fields.VatNumber.Note")</em></span>
                                    </div>
                                }
                            </div>
                      
                
                        @if (Model.StreetAddressEnabled || Model.StreetAddress2Enabled || Model.ZipPostalCodeEnabled
    || Model.CityEnabled || Model.CountryEnabled)
                        {
                            <div class="fieldset">
                                <div class="title">
                                    <strong>@T("Account.YourAddress")</strong>
                                </div>
                                <div class="col_full">
                                    @if (Model.StreetAddressEnabled)
                                    {
                                        <div class="col_full">
                                            @Html.LabelFor(model => model.StreetAddress, new { }, ":")
                                            @Html.EditorFor(model => model.StreetAddress)
                                            @if (Model.StreetAddressRequired)
                                            {
                                                @Html.RequiredHint()
                                            }
                                            @Html.ValidationMessageFor(model => model.StreetAddress)
                                        </div>
                                    }
                                    @if (Model.StreetAddress2Enabled)
                                    {
                                        <div class="col_full">
                                            @Html.LabelFor(model => model.StreetAddress2, new { }, ":")
                                            @Html.EditorFor(model => model.StreetAddress2)
                                            @if (Model.StreetAddress2Required)
                                            {
                                                @Html.RequiredHint()
                                            }
                                            @Html.ValidationMessageFor(model => model.StreetAddress2)
                                        </div>
                                    }
                                    @if (Model.ZipPostalCodeEnabled)
                                    {
                                        <div class="col_full">
                                            @Html.LabelFor(model => model.ZipPostalCode, new { }, ":")
                                            @Html.EditorFor(model => model.ZipPostalCode)
                                            @if (Model.ZipPostalCodeRequired)
                                            {
                                                @Html.RequiredHint()
                                            }
                                            @Html.ValidationMessageFor(model => model.ZipPostalCode)
                                        </div>
                                    }
                                    @if (Model.CityEnabled)
                                    {
                                        <div class="col_full">
                                            @Html.LabelFor(model => model.City, new { }, ":")
                                            @Html.EditorFor(model => model.City)
                                            @if (Model.CityRequired)
                                            {
                                                @Html.RequiredHint()
                                            }
                                            @Html.ValidationMessageFor(model => model.City)
                                        </div>
                                    }
                                    @if (Model.CountryEnabled)
                                    {
                                        <div class="col_full">
                                            @Html.LabelFor(model => model.CountryId, new { }, ":")
                                            @Html.DropDownList("CountryId", Model.AvailableCountries)
                                            @if (Model.CountryRequired)
                                            {
                                                @Html.RequiredHint()
                                            }
                                            @Html.ValidationMessageFor(model => model.CountryId)
                                        </div>
                                    }
                                    @if (Model.CountryEnabled && Model.StateProvinceEnabled)
                                    {
                                        <div class="col_full">
                                            @Html.LabelFor(model => model.StateProvinceId, new { }, ":")
                                            @Html.DropDownList("StateProvinceId", Model.AvailableStates)
                                            @if (Model.StateProvinceRequired)
                                            {
                                                @Html.RequiredHint()
                                            }
                                            @Html.ValidationMessageFor(model => model.StateProvinceId)
                                            <span id="states-loading-progress" style="display: none;" class="please-wait">@T("Common.Wait...")</span>
                                        </div>
                                    }
                                </div>
                            </div>
                        }
                        @if (Model.PhoneEnabled || Model.FaxEnabled)
                        {
                            <div class="fieldset">
                                <div class="title">
                                    <strong>@T("Account.YourContactInformation")</strong>
                                </div>
                                <div class="col_full">
                                    @if (Model.PhoneEnabled)
                                    {
                                        <div class="col_full">
                                            @Html.LabelFor(model => model.Phone, new { }, ":")
                                            @Html.EditorFor(model => model.Phone)
                                            @if (Model.PhoneRequired)
                                            {
                                                @Html.RequiredHint()
                                            }
                                            @Html.ValidationMessageFor(model => model.Phone)
                                        </div>
                                    }
                                    @if (Model.FaxEnabled)
                                    {
                                        <div class="col_full">
                                            @Html.LabelFor(model => model.Fax, new { }, ":")
                                            @Html.EditorFor(model => model.Fax)
                                            @if (Model.FaxRequired)
                                            {
                                                @Html.RequiredHint()
                                            }
                                            @Html.ValidationMessageFor(model => model.Fax)
                                        </div>
                                    }
                                </div>
                            </div>
                        }
                        @if (Model.NewsletterEnabled || Model.CustomerAttributes.Count > 0)
                        {
                            <div class="fieldset">
                                <div class="title">
                                    <strong>@T("Account.Options")</strong>
                                </div>
                                <div class="col_full">
                                    @if (Model.NewsletterEnabled)
                                    {
                                        <div class="col_full">
                                            @Html.LabelFor(model => model.Newsletter, new { }, ":")
                                            @Html.EditorFor(model => model.Newsletter)
                                            @Html.ValidationMessageFor(model => model.Newsletter)
                                        </div>
                                    }
                                    @if (Model.CustomerAttributes.Count > 0)
                                    {
                                        @Html.Partial("_CustomerAttributes", Model.CustomerAttributes)
                                    }
                                </div>
                            </div>
                        }
                        @if (Model.AllowCustomersToSetTimeZone)
                        {
                            <div class="fieldset">
                                <div class="title">
                                    <strong>@T("Account.Preferences")</strong>
                                </div>
                                <div class="col_full">
                                    @if (Model.AllowCustomersToSetTimeZone)
                                    {
                                        <div class="col_full">
                                            @Html.LabelFor(model => model.TimeZoneId, new { }, ":")
                                            @Html.DropDownList("TimeZoneId", Model.AvailableTimeZones)
                                            @Html.ValidationMessageFor(model => model.TimeZoneId)
                                        </div>
                                    }
                                </div>
                            </div>
                        }
                      
                           
                           
                                <div class="col_full">
                                    @Html.LabelFor(model => model.Password, new { }, ":") @Html.RequiredHint()
                                  
                                    <input type="text" id="register-form-name" asp-for="Password" name="register-form-name" value="" class="form-control" />




                                   
                                    @Html.ValidationMessageFor(model => model.Password)
                                </div>
                                <div class="col_full">
                                    @Html.LabelFor(model => model.ConfirmPassword, new { }, ":")  @Html.RequiredHint()

                                    <input type="text" id="register-form-name" asp-for="ConfirmPassword" name="register-form-name" value="" class="form-control" />


                                    
                                  
                                    @Html.ValidationMessageFor(model => model.ConfirmPassword)
                                </div>
                                @if (Model.DisplayCaptcha)
                                {
                                    <div class="captcha-box">
                                        @Html.Raw(Html.GenerateCaptcha())
                                    </div>
                                }
                                @if (Model.HoneypotEnabled)
                                {
                                    @Html.Raw(Html.GenerateHoneypotInput())
                                }
                          
                        @if (Model.AcceptPrivacyPolicyEnabled)
                        {
                            <script type="text/javascript">
                    $(document).ready(function () {
                        $('#register-button').click(function () {
                            if ($('#accept-privacy-policy').is(':checked')) {
                                //do some stuff
                                return true;
                            }
                            else {
                                //just show validation errors, dont post
                                alert('@Html.Raw(HttpUtility.JavaScriptStringEncode(T("Account.Fields.AcceptPrivacyPolicy.Required").Text))');
                                return false;
                            }
                        });
                    });
                            </script>
                            <div class="accept-privacy-policy">
                                <input id="accept-privacy-policy" type="checkbox" name="accept-privacy-policy" />
                                <label for="accept-privacy-policy">@T("Account.Fields.AcceptPrivacyPolicy")</label>
                                <span class="read" id="read-privacyinfo">@T("Account.Fields.AcceptPrivacyPolicy.Read")</span>
                                <script>
                        $(document).ready(function() {
                            $('#read-privacyinfo').on('click', function (e) {
                                displayPopupContentFromUrl('@Url.RouteUrl("TopicPopup", new { SystemName = "privacyinfo" })', '@T("Account.Fields.AcceptPrivacyPolicy")');
                            });
                        });
                                </script>
                            </div>
                        }
                        <div class="buttons">
                            <input type="submit" id="register-button" class="button button-3d button-black nomargin" value="@T("Account.Register.Button")" name="register-button" />
                        </div>
                        <div class="external-authentication">
                            @Html.Action("ExternalMethods", "ExternalAuthentication")
                        </div>
                    </div>
                </div>
                            }
            </div>
        </div>

    </div>
</div>



@if (Model.CountryEnabled && Model.StateProvinceEnabled)
{
    <script type="text/javascript">
        $(document).ready(function () {
            $("#@Html.FieldIdFor(model => model.CountryId)").change(function () {
                var selectedItem = $(this).val();
                var ddlStates = $("#@Html.FieldIdFor(model => model.StateProvinceId)");
                var statesProgress = $("#states-loading-progress");
                statesProgress.show();
                $.ajax({
                    cache: false,
                    type: "GET",
                    url: "@(Url.RouteUrl("GetStatesByCountryId"))",
                    data: { "countryId": selectedItem, "addSelectStateItem": "true" },
                    success: function (data) {
                        ddlStates.html('');
                        $.each(data, function (id, option) {
                            ddlStates.append($('<option></option>').val(option.id).html(option.name));
                        });
                        statesProgress.hide();
                    },
                    error: function (xhr, ajaxOptions, thrownError) {
                        alert('Failed to retrieve states.');
                        statesProgress.hide();
                    }
                });
            });
        });
    </script>
}

<style>
    .required{
        color:red

    }
    .field-validation-error{
        color:red
    }


</style>