
@using Nop.Core.Domain.Catalog

@{
    var defaultGridPageSize = EngineContext.Current.Resolve<Nop.Core.Domain.Common.AdminAreaSettings>().DefaultGridPageSize;
    var gridPageSizes = EngineContext.Current.Resolve<Nop.Core.Domain.Common.AdminAreaSettings>().GridPageSizes;

    //page title
    ViewBag.Title = T("Admin.Customer.CustomerPicture").Text;
    //active menu item (system name)
    Html.SetActiveMenuItemSystemName("Customer Pictures list");
}

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
    <div class="content-header clearfix">
        <h1 class="pull-left">
            @T("Admin.Customer.CustomerPicture")
        </h1>
        <div class="pull-right">
        </div>
    </div>

    <div class="content">
        <div class="form-horizontal">
            <div class="panel-group">
                

                <div class="panel panel-default">
                    <div class="panel-body">
                        <div id="customerpictures-grid"></div>

                        <script>
                            $(document).ready(function() {
                                $("#customerpictures-grid").kendoGrid({
                                    dataSource: {
                                        type: "json",
                                        transport: {
                                            read: {
                                                url: "@Html.Raw(Url.Action("CustomerPictureList", "CustomerPicture"))",
                                                type: "POST",
                                                dataType: "json",
                                                data: additionalData
                                            }
                                            ,
                                            update: {
                                                url: "@Html.Raw(Url.Action("Update", "CustomerPicture"))",
                                            type: "POST",
                                            dataType: "json",
                                            data: addAntiForgeryToken
                                        }
                                        },
                                        schema: {
                                            data: "Data",
                                            total: "Total",
                                            errors: "Errors",
                                            model: {
                                                id: "Id",
                                                fields: {
                                                    PictureThumbnailUrl: { editable: false, type: "string" },
                                                    CustomerName: { editable: false, type: "string" },
                                                    UploadDateTime: { editable: false, type: "datetime" },
                                                    Published: { editable: true, type: "boolean" }
                                                }
                                            }
                                        },
                                        requestEnd: function(e) {
                                            if (e.type == "update") {
                                                this.read();
                                            }
                                        },
                                        error: function(e) {
                                            display_kendoui_grid_error(e);
                                            // Cancel the changes
                                            this.cancelChanges();
                                        },
                                        pageSize: @(defaultGridPageSize),
                                        serverPaging: true,
                                        serverFiltering: true,
                                        serverSorting: true
                                    },
                                    pageable: {
                                        refresh: true,
                                        pageSizes: [@(gridPageSizes)],
                                        @Html.Partial("_GridPagerMessages")
                                    },
                                    editable: {
                                        confirmation: "@T("Admin.Common.DeleteConfirmation")",
                                        mode: "inline"
                                    },
                                    scrollable: false,
                                    dataBound: onDataBound,
                                    columns: [
                                        {
                                            field: "PictureThumbnailUrl",
                                            title: "@T("Admin.Customer.CustomerPicture.Fields.PictureThumbnailUrl")",
                                            template: '<img src="#=PictureThumbnailUrl#" />',
                                            width: 100
                                        }
                                        ,
                                        {
                                            field: "CustomerName",
                                            title: "@T("Admin.Customer.CustomerPicture.Fields.CustomerName")",
                                            width: 300
                                        }, 
                                        @*{
                                            field: "Published",
                                            title: "@T("Admin.Customer.CustomerPicture.Fields.Published")",
                                            width: 100,
                                            template: '# if(Published) {# <i class="fa fa-check true-icon"></i> #} else {# <i class="fa fa-close false-icon"></i> #} #'
                                        },*@
                                         {
                                             field: "Published",
                                            title: "@T("Admin.Customer.CustomerPicture.Fields.Published")",
                                            width: 100,
                                            headerAttributes: { style: "text-align:center" },
                                            attributes: { style: "text-align:center" },
                                            template: '# if(Published) {# <i class="fa fa-check true-icon"></i> #} else {# <i class="fa fa-close false-icon"></i> #} #'
                                        },
                                        {
                                            field: "UploadDateTime",
                                            title: "@T("Admin.Customer.CustomerPicture.Fields.UploadDateTime")",
                                            width: 200,
                                            type: "date",
                                            format: "{0:G}"
                                        }, @*{
                                            field: "Id",
                                            title: "@T("Admin.Common.Publish")",
                                            width: 100,
                                            headerAttributes: { style: "text-align:center" },
                                            attributes: { style: "text-align:center" },
                                            template: '<a class="btn btn-default" href="Publish/#=Id#"><i class="fa fa-bullhorn"></i>@T("Admin.Common.Publish")</a>'
                                        }*@
                                         {
                                             command: {
                                                 name: "edit",
                                                 text: {
                                                     edit: "@T("Admin.Common.Publish")",
                                                 update: "@T("Admin.Common.Update")",
                                             cancel: "@T("Admin.Common.Cancel")"
                                    }
                                },
                                title: "@T("Admin.Common.Publish")",
                            width: 150
                            }
                                    ]
                                });
                            });
                        </script>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <script type="text/javascript">
              
                function additionalData() {
                    var data = {
                       
                    };
                    addAntiForgeryToken(data);
                    return data;
                }

                function onDataBound(e) {
                   
                }

    </script>
}


